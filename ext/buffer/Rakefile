require File.join(File.dirname(__FILE__), '..', '..', 'lib', 'coo-coo', 'platform')

NVCC = ENV.fetch("NVCC", "nvcc")
NVCCFLAGS = Array.new
NVCCFLAGS << "-g" if ENV['DEBUG']

if CooCoo::Platform.windows?
  #NVCCFLAGS="--cl-version=2015"
else
  NVCCFLAGS << "--compiler-options='-fPIC -Wall'"
end

DLEXT=RbConfig::CONFIG['DLEXT']

task :default => [ "buffer.#{DLEXT}", "ffi.rb" ]

task :clean do
  sh("rm -f buffer.#{DLEXT} buffer.ext buffer.lib buffer.cu buffer.h ffi.rb")
end

desc "Build buffer.#{DLEXT}"
file "buffer.#{DLEXT}" => [ 'buffer.cu' ] do |t|
	sh("#{NVCC} #{NVCCFLAGS.join(' ')} -shared -o #{t.name} #{t.sources.join(' ')}")
end

def ffi_gen(*args)
  ruby(File.join(CooCoo.root, 'bin', 'ffi-gen'), *args)
end

file 'buffer.cu' => [ 'buffer.pre.cu', 'buffer.h' ] do |t|
  ffi_gen('--source', '-o', t.name, t.source)
end

file 'buffer.h' => 'buffer.pre.cu' do |t|
  ffi_gen('--header', '-o', t.name, *t.sources)
end

file 'ffi.rb' => 'buffer.pre.cu' do |t|
  ffi_gen('--ffi',
          '--module', "CooCoo::DeviceBuffer",
          '--library', 'buffer',
          '-o', t.name,
          *t.sources)
end
